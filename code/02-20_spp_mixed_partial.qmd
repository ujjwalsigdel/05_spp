---
title: "Split-plot RCBD"
format: html
---

# Introduction  
The goals of this exercise are to:  
- Create an analytical workflow for a **split-plot RCBD** with **random blocks**, from data import through publication-ready plot  
- Understand each of its components  

# a) Setup  
Here is where we load the packages we will use.  
```{r setup}
# Loading packages
library(tidyverse) # for data wrangling and plotting
library(car) # for Anova function
library(lme4)
library(broom) # for model residuals extraction
library(emmeans) # for model mean extraction
library(multcomp) # for pairwise comparison letter display
```

**IMPORTANT NOTE**:  
We are using in this exercise the same data set as the one used for the CRD exercise. This is only for **teaching purposes!!**  

In your own analysis, you should always analyze a given designed study data set based on the design that it was implemented with.  
You should NOT analyze a given designed study with a different design than what it was implemented with.  

This is not an option!  

```{r data import}
spp_rcbd_df <- read_csv("../data/wheat_nk_balkh.csv")

spp_rcbd_df
```

# b) EDA tables  
```{r summary}
summary(spp_rcbd_df)
```

```{r glimpse}
glimpse(spp_rcbd_df)
```
# c) Wrangling
```{r rcbd_dfw}
spp_rcbd_dfw <- spp_rcbd_df %>%
  mutate(block = factor(block),
         nrate_kgha = factor(nrate_kgha),
         krate_kgha = factor(krate_kgha) 
         ) %>%
  mutate(trtname = paste0(nrate_kgha,"+",krate_kgha))

spp_rcbd_dfw
```


```{r rcbd_dfw}
summary(spp_rcbd_dfw)
```
Number of blocks: 4  
Number o treatments: 3 N rates x 3 K rates = 9  
Number of observations: 4 x 9 = 36  
Yield: from 2795 to 7445 kg/ha  

# d) EDA plots  
```{r n boxplot}
ggplot(spp_rcbd_dfw, aes(x = nrate_kgha, 
                    y = yield_kgha,
                    color = nrate_kgha)) +
  geom_boxplot() +
  geom_jitter() +
  theme(legend.position = "none")
```

```{r k boxplot}
ggplot(spp_rcbd_dfw, aes(x = krate_kgha, 
                    y = yield_kgha,
                    color = krate_kgha)) +
  geom_boxplot() +
  geom_jitter() +
  theme(legend.position = "none")
```

```{r nk boxplot}
ggplot(spp_rcbd_dfw, aes(x = nrate_kgha, 
                    y = yield_kgha,
                    color = nrate_kgha)) +
  geom_boxplot() +
  geom_jitter() +
  facet_grid(.~krate_kgha) +
  theme(legend.position = "none")
```

# e) Statistical model  
## Mixed-effect modeling in R  

Now that we are going to treat **blocks as random effect**, we will need to use a different function.  

To account for more than one variance component (i.e., random effects and error), we can use function `lmer()` from package `lme4`.  

In the case of a split-plot RCBD, we'll have 2 random variance components coming from the split-plot design, plus the residual variance component that every model has.  

We have 2 random variance component from the split-plot because we have 2 different sizes of experimental unit that were randomized independently, and each size has its own error term.


```{r model}
# Changing to sum-to-zero contrast
options(contrasts = c("contr.sum", "contr.poly"))

# Model fitting
spp_rcbd_mix_mod 

# Summary
summary(spp_rcbd_mix_mod)
```

Notice now how the `summary()` above has a new section for **random effects**, with 3 rows:  
  - One for krate_kgha:block  
  - One for block  
  - One for residual  

# f) ANOVA table  
```{r ANOVA}
Anova(spp_rcbd_mix_mod, type=3)
```
Notice how this table is now titled "Analysis of Deviance Table". That's because we are using REML instead of mean squares.  

Also notice how block (i.e., block in this case) does not appear in the ANOVA table above. That's because it only displays **fixed effects**.

As before, since the interaction is significant here, we should extract means and perform pairwise comparisons for the interaction term.

Before we do that, let's check our model assumptions. Remember, a model is only valid for inference (i.e., means and pwc) IF if fulfills the linear model assumptions.  

# g) Linear model assumptions  
## Extracting residuals
First, let's extract our model residuals, and also create studentized residuals.  

```{r rcbd_mix_resid}
library(broom.mixed)
spp_rcbd_mix_resid <- augment(spp_rcbd_mix_mod) %>%
  mutate(.studresid=rstudent(spp_rcbd_mix_mod))

spp_rcbd_mix_resid
```

Now, let's recap the linear model assumptions:  

- Independence (no pattern)  
- Variance homogeneity (homoscedasticity)  
- Normality  
- Outlier detection (< -3 or > 3)  

One difference in mixed models is that the 3 first assumptions are also applied to the **random effects**, so we need to check it for them as well.  

### Block random effects are iid ~ N(0,var_a)  
```{r randeff_block}
randeff_block

randeff_block
```

For random effects with so few levels (i.e., 4 since that's the number of blocks), the QQ plot is one of the only ways to check for assumptions on random effects.  

```{r QQ plot for random effects}
ggplot(randeff_block, aes(sample=`(Intercept)`))+
  stat_qq(  shape = 21,
            fill = "purple", 
            size = 3,
            alpha = .7
  )+
  stat_qq_line()+
  labs(x = "Theoretical quantile",
       y = "Sample quantile")+
  theme_bw()
```
Nothing to worry here, especially since we only have 4 points.  

### Block:krate random effects are iid ~ N(0,var_b)  
```{r randeff_block}
randeff_blockkrate 

randeff_blockkrate
```


```{r QQ plot for random effects}
ggplot(randeff_blockkrate, aes(sample=`(Intercept)`))+
  stat_qq(  shape = 21,
            fill = "purple", 
            size = 3,
            alpha = .7
  )+
  stat_qq_line()+
  labs(x = "Theoretical quantile",
       y = "Sample quantile")+
  theme_bw()
```
Nothing to worry here either, let's check residual assumptions.   

### Within-group errors are iid ~ N(0, var_e)  
```{r }
ggplot(spp_rcbd_mix_resid, aes(x=.fitted, y=.studresid))+
  geom_hline(yintercept = 0, color="red")+
  geom_point(shape = 21,
             fill = "purple", 
             size = 3,
             alpha = .7)+
  geom_smooth()+
  geom_hline(yintercept = c(-3,3), color = "red")+
  theme_bw()
```

- **Independence**: seems liker there is a potential pattern, but since error bands comprise 0 on the y-axis, I'm not worried.  

- **Variance homoscedastic**: seems constant across the x-axis.   

- **Outliers**: nothing outside the -3,3 boundaries.  


```{r}
ggplot(spp_rcbd_mix_resid, aes(sample=.studresid))+
  stat_qq(  shape = 21,
            fill = "purple", 
            size = 3,
            alpha = .7
  )+
  stat_qq_line()+
  labs(x = "Theoretical quantile",
       y = "Sample quantile")+
  theme_bw()
```

```{r}
ggplot(spp_rcbd_mix_resid, aes(x=.studresid))+
  geom_density(color = "black",
               fill = "purple",
               alpha = .7)+
  scale_x_continuous(breaks = c(-3,0,3), limits = c(-3,3))+
  theme_bw()

```

- **Normality**: residuals seem normal.  

# h) Model means  
The next step in the workflow is extracting the model means.  

Remember that it is at this level that we establish the hierarchy of how our pairwise comparisons will be performed.  

Let's extract it by comparing everything to everything else.
```{r interaction means all}
spp_rcbd_mix_means_all <- emmeans(spp_rcbd_mix_mod, 
                                  ~nrate_kgha:krate_kgha)

spp_rcbd_mix_means_all
```

In a split-plot, we have 2 sources of error because we have 2 different sizes of EU that were randomized separately.  

When we ask for the interaction means (like in chunk above), the emmean error is pulling from both of those sources.  

What happens with the emmean error if we ask for the emmean of the main effects of K and N rate separately? 

```{r k rate means}

```
The SE of the whole-plot treatment factor (k rate) is **232**.

What about for the split-plot treatment factor (n rate)?  

```{r n rate means }

```
It is 209.  

Points to notice:  
  - The **SE of the WP and SP treatment factors is different**! On the RCBD case we ran last exercise, they were the same because we only had one experimental size unit.  
  
  - The **SE of the SP treatment factor will always be lower than that from the WP treatment factor**. Why?  
  
  - When comparing means from the interaction, the SE of those means is a combination of the SEs from both WP and SP errors.  
  
# i) Pairwise comparisons  
Now that we extracted means, let's perform pairwise comparisons among them.  

```{r interaction pwc all}
spp_rcbd_mix_cld_all <- cld(spp_rcbd_mix_means_all, 
                   reversed=T, 
                   adjust="none",
               Letters=letters)

spp_rcbd_mix_cld_all
```

Let's do some light wrangling here to be able to plot these.  

```{r selected pwc}
spp_rcbd_mix_cld_selected <- spp_rcbd_mix_cld_all %>%
  as.data.frame() %>%
  mutate(letter=trimws(.group)) %>%
  mutate(trtname = paste0(nrate_kgha,"+",krate_kgha))

spp_rcbd_mix_cld_selected
```

# g) Final plot  
Let's plot our results, including both **raw data** (for allowing our audience to inspect data distribution) and **statistical model summary (i.e., letter separation)** for inference purposes.    
Let's make this plot publication ready.  

```{r rcbd final plot}
ggplot(mapping = aes(fill = trtname))+
  # Raw data and boxplots  
  geom_boxplot(data = spp_rcbd_dfw,
               aes(x = trtname, y = yield_kgha),
               alpha = .8) +
  geom_jitter(data = spp_rcbd_dfw,
               aes(x = trtname, y = yield_kgha),
              shape = 21,
              size = 3,
              alpha = .6) +
  # Adding letters
  geom_label(data = spp_rcbd_mix_cld_selected,
            aes(x = trtname, y = emmean, label = letter),
            fill = "white") +
  labs(x = "N rate + K rate (kg/ha)",
       y = "Yield (kg/ha)") +
  scale_fill_viridis_d() +
  theme(panel.grid.major.y = element_blank(),
        panel.grid.minor.y = element_blank(),
        legend.position = "none")

ggsave("../output/spp_rcbd_mix_means.png",
       width = 8,
       height = 5)
```

What happened the letter separation compared to the RCBD mixed with blocks random?  


